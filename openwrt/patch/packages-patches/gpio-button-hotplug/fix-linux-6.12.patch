diff --git a/package/kernel/gpio-button-hotplug/src/gpio-button-hotplug.c b/package/kernel/gpio-button-hotplug/src/gpio-button-hotplug.c
--- a/package/kernel/gpio-button-hotplug/src/gpio-button-hotplug.c	(revision c1d5de0c59efd25ecb5922cb11e5d38b072cf993)
+++ b/package/kernel/gpio-button-hotplug/src/gpio-button-hotplug.c	(date 1738916646402)
@@ -519,6 +519,15 @@
 			bdata->gpiod = devm_gpiod_get_index(dev, desc, i,
 							    GPIOD_IN);
 			if (IS_ERR(bdata->gpiod)) {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0)
+				error = PTR_ERR(bdata->gpiod);
+				if (error) {
+					dev_err_probe(dev, error,
+						"Failed to get GPIO descriptor for %s (index %d)\n",
+						desc, i);
+					goto out;
+				}
+#else
 				/* or the legacy (button->gpio is good) way? */
 				error = devm_gpio_request_one(dev,
 					button->gpio, GPIOF_IN | (
@@ -530,7 +539,7 @@
 						      button->gpio);
 					goto out;
 				}
-
+#endif
 				bdata->gpiod = gpio_to_desc(button->gpio);
 			}
 		} else {
@@ -538,10 +547,14 @@
 			struct device_node *child =
 				of_get_next_child(dev->of_node, prev);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0)
 			bdata->gpiod = devm_fwnode_gpiod_get(dev,
 				of_fwnode_handle(child), NULL, GPIOD_IN,
 				desc);
-
+#else
+			bdata->gpiod = devm_gpiod_get_from_of_node(dev,
+				child, "gpios", 0, GPIOD_IN, desc);
+#endif
 			prev = child;
 		}
 
@@ -674,7 +687,11 @@
 	}
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6,11,0)
 static int gpio_keys_remove(struct platform_device *pdev)
+#else
+static void gpio_keys_remove(struct platform_device *pdev)
+#endif
 {
 	struct gpio_keys_button_dev *bdev = platform_get_drvdata(pdev);
 
@@ -685,7 +702,9 @@
 	else
 		gpio_keys_irq_close(bdev);
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6,11,0)
 	return 0;
+#endif
 }
 
 static struct platform_driver gpio_keys_driver = {
